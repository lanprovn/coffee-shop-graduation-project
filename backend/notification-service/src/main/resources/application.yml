server:
  port: 8086
  servlet:
    context-path: /api/v1

spring:
  application:
    name: notification-service
  cloud:
    config:
      enabled: false
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5437}/${DB_NAME:coffeeshop_notifications}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${JPA_FORMAT_SQL:false}
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin123}

# RabbitMQ Configuration
notification:
  rabbitmq:
    queue:
      order-created: order.created.queue

  zipkin:
    base-url: ${ZIPKIN_BASE_URL:http://localhost:9411}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  prometheus:
    metrics:
      export:
        enabled: true
  info:
    env:
      enabled: true

logging:
  level:
    "[com.coffeeshop]": ${LOG_LEVEL:INFO}
    "[org.springframework]": ${SPRING_LOG_LEVEL:WARN}
    "[org.hibernate]": ${HIBERNATE_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:/var/log/coffeeshop/notification-service.log}
    max-size: 100MB
    max-history: 30

# Application specific configuration
coffee-shop:
  notification:
    email:
      enabled: ${EMAIL_NOTIFICATIONS_ENABLED:true}
      from: ${EMAIL_FROM:noreply@coffeeshop.com}
    sms:
      enabled: ${SMS_NOTIFICATIONS_ENABLED:false}
      provider: ${SMS_PROVIDER:}
    push:
      enabled: ${PUSH_NOTIFICATIONS_ENABLED:true}
      firebase:
        server-key: ${FIREBASE_SERVER_KEY:}